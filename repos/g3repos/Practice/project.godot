; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "Resource",
"class": "Book",
"language": "GDScript",
"path": "res://ObstacleCourse_Part3/practices/01.FortuneCookies/Book.gd"
}, {
"base": "Resource",
"class": "Chapter",
"language": "GDScript",
"path": "res://addons/PracticeTester/resources/Chapter.gd"
}, {
"base": "Revealer",
"class": "CheckmarkRevealer",
"language": "GDScript",
"path": "res://addons/PracticeTester/editor_ui/CheckmarkRevealer.gd"
}, {
"base": "Resource",
"class": "Course",
"language": "GDScript",
"path": "res://addons/PracticeTester/resources/Course.gd"
}, {
"base": "Node2D",
"class": "DebuggerActor",
"language": "GDScript",
"path": "res://Debugger/DebuggerActor.gd"
}, {
"base": "Node2D",
"class": "DebuggerBoard",
"language": "GDScript",
"path": "res://Debugger/DebuggerBoard.gd"
}, {
"base": "DebuggerActor",
"class": "DebuggerEnemy",
"language": "GDScript",
"path": "res://Debugger/Enemy/DebuggerEnemy.gd"
}, {
"base": "DebuggerActor",
"class": "DebuggerPlayer",
"language": "GDScript",
"path": "res://Debugger/Player/DebuggerPlayer.gd"
}, {
"base": "Node",
"class": "DebuggerPlayerInput",
"language": "GDScript",
"path": "res://Debugger/DebuggerPlayerInput.gd"
}, {
"base": "Node2D",
"class": "GDQuestCollisionCircleDebugDraw",
"language": "GDScript",
"path": "res://addons/DebugHelpers/GDQuestCollisionCircleDebugDraw.gd"
}, {
"base": "Area2D",
"class": "GDQuestDebugDraggable",
"language": "GDScript",
"path": "res://addons/DebugHelpers/GDQuestDebugDraggable.gd"
}, {
"base": "Reference",
"class": "GutHookScript",
"language": "GDScript",
"path": "res://addons/gut/hook_script.gd"
}, {
"base": "Node",
"class": "GutTest",
"language": "GDScript",
"path": "res://addons/gut/test.gd"
}, {
"base": "Resource",
"class": "InventoryItem",
"language": "GDScript",
"path": "res://ObstacleCourse_Part3/practices/02.Items/InventoryItem.gd"
}, {
"base": "KinematicBody2D",
"class": "PlayerCharacter",
"language": "GDScript",
"path": "res://ObstacleCourse_Part3/PlayerCharacter.gd"
}, {
"base": "Resource",
"class": "Practice",
"language": "GDScript",
"path": "res://addons/PracticeTester/resources/Practice.gd"
}, {
"base": "Node",
"class": "PracticeTests",
"language": "GDScript",
"path": "res://addons/PracticeTester/PracticeTests.gd"
}, {
"base": "Container",
"class": "Revealer",
"language": "GDScript",
"path": "res://addons/PracticeTester/editor_ui/Revealer.gd"
}, {
"base": "ScrollContainer",
"class": "SmoothScrollContainer",
"language": "GDScript",
"path": "res://addons/PracticeTester/ui/SmoothScrollContainer.gd"
}, {
"base": "Control",
"class": "UIPracticeCheck",
"language": "GDScript",
"path": "res://addons/PracticeTester/ui/UIPracticeCheck.gd"
}, {
"base": "Revealer",
"class": "UIPracticeHint",
"language": "GDScript",
"path": "res://addons/PracticeTester/editor_ui/UIPracticeHint.gd"
}, {
"base": "Control",
"class": "UITaskItem",
"language": "GDScript",
"path": "res://addons/PracticeTester/editor_ui/UITaskItem.gd"
}, {
"base": "Node2D",
"class": "Vector2D",
"language": "GDScript",
"path": "res://SideScroller/BatLookToy/LookDirection.gd"
} ]
_global_script_class_icons={
"Book": "",
"Chapter": "",
"CheckmarkRevealer": "res://addons/PracticeTester/editor_ui/Revealer.svg",
"Course": "",
"DebuggerActor": "",
"DebuggerBoard": "",
"DebuggerEnemy": "",
"DebuggerPlayer": "",
"DebuggerPlayerInput": "",
"GDQuestCollisionCircleDebugDraw": "",
"GDQuestDebugDraggable": "res://addons/DebugHelpers/GDQuestDebugDraggable.svg",
"GutHookScript": "",
"GutTest": "",
"InventoryItem": "",
"PlayerCharacter": "",
"Practice": "",
"PracticeTests": "",
"Revealer": "res://addons/PracticeTester/editor_ui/Revealer.svg",
"SmoothScrollContainer": "",
"UIPracticeCheck": "",
"UIPracticeHint": "",
"UITaskItem": "",
"Vector2D": ""
}

[application]

config/name="Learn to Code with Godot: Practices"
run/main_scene="res://DialogueBoxes/01.DialogueBox/LinearDialogue.tscn"
config/icon="res://icon.png"

[autoload]

BackgroundInjector="*res://addons/BackgroundInjector/BackgroundInjector.gd"
UIPractice="*res://addons/PracticeTester/ui/UIPractice.tscn"
HelpersInjector="*res://addons/DebugHelpers/HelpersInjector.gd"
UserProfiles="*res://addons/PracticeTester/UserProfiles.gd"

[debug]

gdscript/warnings/return_value_discarded=false

[display]

window/size/width=1920
window/size/height=1080
window/size/fullscreen=true
window/dpi/allow_hidpi=true
window/stretch/mode="2d"
window/stretch/aspect="keep"

[editor_plugins]

enabled=PoolStringArray( "res://addons/BackgroundInjector/plugin.cfg", "res://addons/ColorPickerPresets/plugin.cfg", "res://addons/DebugHelpers/plugin.cfg", "res://addons/PracticeTester/plugin.cfg" )

[input]

scroll_up_one_page={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777235,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
scroll_down_one_page={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777236,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
scroll_to_top={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777229,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
scroll_to_bottom={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777230,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
scroll_up={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777232,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
, Object(InputEventMouseButton,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"button_mask":0,"position":Vector2( 0, 0 ),"global_position":Vector2( 0, 0 ),"factor":1.0,"button_index":4,"pressed":false,"doubleclick":false,"script":null)
 ]
}
scroll_down={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777234,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
, Object(InputEventMouseButton,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"button_mask":0,"position":Vector2( 0, 0 ),"global_position":Vector2( 0, 0 ),"factor":1.0,"button_index":5,"pressed":false,"doubleclick":false,"script":null)
 ]
}
click={
"deadzone": 0.5,
"events": [ Object(InputEventMouseButton,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"button_mask":0,"position":Vector2( 0, 0 ),"global_position":Vector2( 0, 0 ),"factor":1.0,"button_index":1,"pressed":false,"doubleclick":false,"script":null)
 ]
}
jump={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":32,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":87,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777232,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
, Object(InputEventJoypadButton,"resource_local_to_scene":false,"resource_name":"","device":0,"button_index":0,"pressure":0.0,"pressed":false,"script":null)
 ]
}
move_left={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":0,"physical_scancode":65,"unicode":0,"echo":false,"script":null)
 ]
}
move_right={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":0,"physical_scancode":68,"unicode":0,"echo":false,"script":null)
 ]
}
move_up={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":0,"physical_scancode":87,"unicode":0,"echo":false,"script":null)
 ]
}
move_down={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":0,"physical_scancode":83,"unicode":0,"echo":false,"script":null)
 ]
}
spacebar={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":0,"physical_scancode":32,"unicode":0,"echo":false,"script":null)
 ]
}

[physics]

common/enable_pause_aware_picking=true

[rendering]

2d/snapping/use_gpu_pixel_snap=true
batching/precision/uv_contract=true
environment/default_clear_color=Color( 0.188235, 0.188235, 0.286275, 1 )
environment/default_environment="res://default_env.tres"
