keys,en
kinematicbody2d_sidescrollmovement,"The move_and_slide() method is also useful for topdown movement. When the KinematicBody2D collides with an obstacle, it will slide alway from it avoiding getting stuck."
kinematicbody2d_stompmechanic,"KinematicBodies allow us to access collision's data, such as the normal and the collider, like for this stomp mechanic."
kinematicbody2d_movingplatforms,"KinematicBodies can be used for any collision body that moves in the game. This includes moving platforms."
kinematicbody2d_rotatingbodies,"Using Sync to Physics also works for angular movement, such as opening bridges and spinning platforms."
kinematicbody2d_wallslideandjump,"Another good use case for KinematicBodies is to detect motion relative collisions, such as detecting walls, ceilling, and floor. Excellent for wall sliding and wall jump."
kinematicbody2d_passthroughmechanics,"By manipulating KinematicBody2D's collision masks we can pass through platforms. Press down and jump together to fall."
kinematicbody2d_pushrigidbodies,"You can interact with a RigidBody2D. To push a rock, we turn off the kinematic body's infinite inertia and apply impulses to the rigid body on contact."
kinematicbody2d_topdownmovement,"The move_and_slide() method is also useful for topdown movement. When the KinematicBody2D collides with an obstacle, it will slide alway from it avoiding getting stuck."
kinematicbody2d_topdownpushmovement,"KinematicBody2Ds can also interact with each other and apply forces. For instance, we can use the `move_and_slide()` on colliders that are in the `rock` group so our player can push them."
kinematicbody_platformermovement3d,"KinematicBodies are ideal for 3D platformers, mode_and_slide() ensures we can smoothly navigate the world without getting stuck."
kinematicbody_snapping3d,"The move_and_slide_with_snap() allows you to set a snap vector that glues the character to the ground, try toggling snapping on and off with E."
kinematicbody_stompmechanic3d,"KinematicBodies allow us to access collision's data, such as the normal and the collider, like for this stomp mechanic."
kinematicbody_movingplatforms3d,"KinematicBodies can be used for any collision body that moves in the game. This includes moving platforms."
kinematicbody_rotatingplatforms3d,"Using Sync to Physics also works for angular movement, such as opening bridges and spinning platforms."
kinematicbody_wallslideandjump3d,"Another good use case for KinematicBodies is to detect motion relative collisions, such as detecting walls, ceilling, and floor. Excellent for wall sliding and wall jump."
kinematicbody_pushrigidbodies3d,"You can interact with a RigidBody. To push a rock, we turn off the kinematic body's infinite inertia and apply impulses to the rigid body on contact."
kinematicbody_fpsmovement,"KinematicBody is also the goto option for FPS character controllers."
richtextlabel_bbcodes,"RichTextLabels let you display lot's of text with formatting and animation using bbcodes.
press space or enter to see some."
richtextlabel_chatbox,"They are also great for displaying lot's of text you might need to scroll though like a chat box."
richtextlabel_tooltip,"Using RichTextLabels you can detect when a mouse is hovering over text with the meta_hover_started() signal. This can let you make custom tooltips."
richtextlabel_custombbcode,"You can code and use text effects to animate or modify part of your RichTextLabel's text."
area2d_sign,"Areas detect when something enters them, like the player touching a sign."
area2d_coins,"You can use areas for collectibles, like to attract coins to the player."
area2d_enemies,"With an area, you can detect when an entity is close to another and initiate pursuit."
area2d_door,"You can open and close the door by moving on the pressure plate. The plate is an Area2D."
area2d_rocks,"Finally, areas can override the world's physics properties and work as attractors.
Similarly, they can also force sound to flow through a specific audio mixer channel."
area2d_hurtbox,"Often, two areas are used. Notice how the enemy's hurtbox (red) which can hurt you, is small, while the hitbox (green, big) is larger to allow you to hit them easily.
Use Z to attack."
area2d_chestscene,"Areas can be used for chests, levers, and other context-sensitive actions (use Z to open the chest)"
area2d_complexshapes,"A single area can have as many shapes as you want.
Use CollisionShape2D for convex shapes and CollisionPolygon2D for complex concave shapes."
raycast2d_lineofsight,"You can use ray casts for an AI's line of sight.
Here, if the ray collides, something is in the way and the ship can't lock onto the player."
raycast2d_lineofsightmanyrays,"By casting multiple rays, you can improve your AI's vision. The simplest way is to fan them out, as in this example."
raycast2d_lasersight,"RayCast2D is perfect for line-based weapons like lasers, as well as rifles, as you can check the distance to colliders."
raycast2d_hitscan,"Here's an example of a Gattling gun which uses only one RayCast2D node to scan the environment."
raycast2d_detectfloor,"In this demo, we use the ray to find the floor (the planets). Combined with areas, it allows us to jump from planet to planet."
raycast2d_edgedetection,"You can also use raycasts to detect the edges of platforms.
Here, the character stops, but you could use that to play a peek animation."
raycast2d_boids,"Those AIs detect walls with two RayCast2D nodes and use them to steer away from obstacles."
tween_movement,"Tweens let you animate to and from dynamic values, for example
moving this ship to the current mouse position. Left-click to move the ship."
tween_dynamicstrength,"Or dynamically changing the size of an explosion."
tween_progressbar,"Using  interpolate method lets us animate
a changing progress bar and it's colour in the same function."
tween_poppingui,"You can use the tween_all_completed callback to trigger animations in a sequence."
tween_springanimation3d,"Tweens work in 3D too! They can interpolate properties on Spatial nodes such as translation and scale. Click the button to animated the spring."
tween_collectibleuitween,"We can animate objects towards UI elements to provide feedback to players.
Try dragging the card around."
tween_carddraw3d,"A single tween node can smoothly animate more than one object.
Click on the purple deck of cards to draw a card."
camera2d_attachcamera,"Camera2D can follow a 2D node around the game world, keeping them on-screen."
camera2d_dragmargin,"Drag margins hold the screen steady, until the camera's parent moves closer to the edge of the screen. This is great for steadying the camera on fast-moving players."
camera2d_levellimits,"A Camera2D can stop itself from scrolling past a point in the world, using the Limit property."
camera2d_mousepan,"You can pan a camera without changing its position to inspect your surroundings. Move the mouse cursor to adjust the camera's Offset property."
camera2d_rotatecamera,"Camera2Ds can optionally rotate with their parent. Few games use this feature, but you'll find the occasional opportunity to rotate the camera in pure top-down games."
camera2d_randomscreenshake,"Pass over the switch to shake the view. This screenshake uses random numbers on the Offset property."
camera2d_noisescreenshake2d,"You can also use a noise generator for a smoother shake effect. This demo uses Godot's OpenSimplexNoise resource."
camera2d_cyclecameras,"You can cycle cameras by setting a different camera to Current, as a way to quickly jump the camera around the game."
camera2d_smoothtransition,"Press Interact to smoothly transition the view. This moves a single camera's position, and takes advantage of its built-in Smoothing property."
camera2d_zoom,"Zoom controls the framing of the scene, allowing us to get an overview of the world."
camera2d_zoomtofit,"You can adjust Zoom and Offset together to fit two targets on-screen."
label_displaytext,"Label's display whatever text you want to show."
label_alignment,"You can position the text with horizontal and vertical alignment options."
label_animatedtext,"You can animate labels to write out their text using the percent visible property."
rigidbody2d_kinematicvsrigidbody2d,"RigidBodies are used for objects you want to be influenced by physics, and can be used to make player controllers that interacts well with physics objects."
rigidbody2d_sidescrollerrigid,"RigidBodies are even more convenient when dealing with sidescrollers as you can let the engine handle gravity for you."
rigidbody2d_shootingrocket,"They are ideal for projectiles that bounce or react to a collision like grenades and rockets."
rigidbody2d_shootingcannon,"And structures that you want to be destructible. Click to shoot."
rigidbody2d_ragdoll,"RigidBodies have modes that can make them behave differently in different contexts, such as if you want to turn a body into a ragdoll."
rigidbody2d_delaunayexplosion,"RigidBodies are ideal for destructible objects. You can use the triangulate_delaunay_2d function to dynamically create exploded polygons, try clicking on the asteroids for an example."
rigidbody_kinematicvsrigidbody3d,"RigidBodies are used for objects you want to be influenced by physics, and can be used to make player controllers that interacts well with physics objects."
rigidbody_shootinggrenade3d,"They are ideal for projectiles that bounce or react to a collision like grenades and rockets. Click to shoot."
rigidbody_shootingcannon3d,"And structures that you want to be destructible. Click to shoot."
rigidbody_shattering3d,"RigidBodies are ideal for destructible objects. Here we replace the crates with a shattered version of the model when it needs to break, try clicking on the crates to shatter them."
rigidbody_planetgravity3d,"Rigid bodies are great for making complicated situations like multiple gravity points easier to handle."
remotetransform2d_clawarmscreen,"You can move rigid bodies and other physics objects, regardless of where they are in the scene tree."
remotetransform2d_uionplayer,"Using the update properties, a node can inherit the position of another node without its rotation or scale."
remotetransform2d_lockoncrosshair,"You can move one object between multiple remotes by setting and clearing their remote path property."
remotetransform2d_mapview,"You can use RemoteTransform2D to synchronize a map view with the game world."
remotetransform2d_zipline,"You can attach RemoteTransform2D to other constraints - like a PathFollow2D - to create ziplines and other mechanisms."
viewport_splitscreen,"To create a split screen situation, you can use two viewports."
viewport_screenshots,"Viewports render image data which you can save on the device running the game."
viewport_nametags,"You'll use viewports to render anything to a texture and, for example, display text in the 3D world, like a character's name tag."
viewport_3din2d,"You can use viewports to render a 3D object or scene and use it in 2D. You'll also use that with cut-out characters."
viewport_graphicssettings,"You can modify the rendering settings of any viewport at runtime to control the game's visual quality."
viewport_portals,"Viewports can render any part of the game world, allowing you to create portals or magic doors to other worlds."
viewport_fpsweapon,"You can use a viewport to render a weapon model seperately so it doesn't intersect with the level."
timer_cooldown,"Timers allow you to trigger events after a given length of time. This let's us do things like adding cooldowns to abilities."
timer_cyclictimer,"Timers repeat themselves default. This makes them great for triggering regular events."
timer_dynamictimer,"You can create Timers dynamically in code! This is a great tool for sequencing events in code using the yield() function."
timer_spawnmonsters,"You can use a repeating timer to make waves of enemies regularly."
animationplayer_deathanimation,"AnimationPlayers are best for animations that are always the same. Such as
fading the screen in and out when a player dies or changes scene."
animationplayer_attackfunctioncall,"Animations can also call functions, such as to do damage or trigger particles at a certain time."
animationplayer_turretanimationqueue,"Multiple Animations can be queued to play sequentially. This can be used to create attack patterns for enemies."
animationplayer_gunreload3d,"AnimationPlayers are also great for handling complicated 3D transformations where you know the start and ends state - this has let us make a simple pleasing reload animation"
animationplayer_meshhighlight3d,"If you have 3D meshes you can easily create an outline mesh to help you highlight objects. You can animate the properties of an attached material for a cleaner highlight."
canvaslayer_headsupdisplay,"Whenever you want some interface to stay fixed on the screen, place it as a child of a CanvasLayer with Follow Viewport off."
canvaslayer_postprocessing,"If you use a CanvasLayer, a node taking the entire screen (like a ColorRect), and a screen shader, you can apply post-processing filters to the entire screen, like this CRT effect."
canvaslayer_transitionanimation,"On top of post-processing effects, you can use CanvasLayer for full-screen animations, like this fade to black transition."
canvaslayer_pseudo3d,"With multiple copies of a layer and the Follow Viewport feature, you can create a fake 3D effect."
hboxcontainer_jrpgactionlist,"VBoxContainer is great for ordering nodes in a list, to allow for list of commands in a JRPG."
hboxcontainer_leveleditordemo,"Either BoxContainer can hold any Control nodes together, and adjust their placement using the childrens' Size Flags."
hboxcontainer_mainmenudemo,"VBoxContainer and HBoxContainer can hold alike buttons together for main menus and settings menus."
hboxcontainer_splithud,"HBoxContainer and VBoxContainer hold Control nodes in rows and columns. You can create a HUD that fits your screen based on the number of elements and your screen size."
line2d_polygonoutline,"You can easily recycle the points of a polygon in a Line2D to make an outline."
line2d_bullettrails,"You can use lines for all sorts of motion trails."
line2d_navigationline,"In this example, we draw the path the player walks using a Line2D."
line2d_golf,"In this demo, the line represents the force with which you'll throw the ball. Click and drag to throw the ball."
line2d_arcattack,"Those lovely arcs all use a Line2D node."
line2d_tether,"In the air, press shift to create a balloon that'll slow down your fall. A Line2D draws the connection to the balloon."
audiostreamplayer_playloopmusic,"AudioStreamPlayer can play any audio streams. For example, a looping music track."
audiostreamplayer_oneoffsoundeffect,"We can also use it to play sound effects. In that case, we can import our audio files with the loop setting turned off."
audiostreamplayer_dialogues,"Using an AnimationPlayer we can sync our voice over samples with dialogues! For that, we can use an Audio Playback Track."
audiostreamplayer_positionalsound,"The 2D and 3D versions of AudioStreamPlayer make sound positional. This adds a layer of depth to our sound effects. Notice the panning in this demo."
audiostreamplayer_soundeffectarray,"Sometimes, we need multiple sound effects to add variety to our game. In that case, we store sounds in an array and randomize the one we play."
audiostreamplayer_randompitchedsound,"When all we need is a small shift in the effect's pitch, we can use the AudioStreamRandomPitch resource."
audiostreamplayer_chargingeffect,"We can also animate the AudioStreamPlayer's pitch scale. Increasing it over time gives a sense of acceleration. Perfect for charging effects."
audiostreamplayer_pitchshiftingsamples,"We made this instrument with one sound file, by shifting the pitch of our AudioStreamPlayer."
audiostreamplayer_environmenteffects,"The power of Godot's audio system really shines with the AudioEffect resource. We can play some effects only inside an area, like underwater or in a cave."
audiostreamplayer_recordingamesound,"You can use AudioEffectRecord to record in-game audio. That's great for musical games where the player can record their songs."
audiostreamplayer_recordplaymicrophone,"Using the AudioStreamMicrophone resource we can access player's mic and record it as well! In Godot 3.3, this doesn't work on Linux."
audiostreamplayer_positionalsound3d,"Positional audio is important in 3D games as it helps indicate where objects are by being louder in the different stereo channels. Click the radio to pull it towards you."
audiostreamplayer_securitycamera,"AudioStreamPlayer3D has a large number of attenuation options controlling how volume changes with distance, the current camera or listener will determine where distance is calculated from."
audiostreamplayer_dopplereffect,"Moving objects can benefit from doppler tracking. This makes their pitch change depending on their speed, which lets you achieve sounds similar to police sirens going past."
audiostreamplayer_stereoaudio3d,"Positional audio creates a stereo effect and can emit in a specific angle. Try walking around the stage to see how the audio balance changes with position."
audiostreamplayer_floorsounds3d, "Having different sounds for different floors and textures adds to a game's immersion."
progressbar_limithealth,"ProgressBar holds and shows a numeric value. It can clamp its value from going past a minimum or maximum number."
progressbar_levelprogress,"ProgressBars are flexible, their value can be set using set_as_ratio(). You can use them to represent percentages like level progress or random chances."
progressbar_healthmaximum,"You can increase the Max Value of the ProgressBar to upgrade your player's maximum heath."
progressbar_abilitycooldown,"TextureProgress gives you a ProgressBar with more visual options. You can use it to create MOBA ability cooldowns."
area3d_sign3d,"Areas detect when something enters them, like the player touching a sign."
area3d_coins3d,"You can use areas for collectibles, like to attract coins to the player."
area3d_enemies3d,"With an area, you can detect when an entity is close to another and initiate pursuit."
area3d_door3dscene,"You can open and close the door by moving on the pressure plate. The plate is an Area."
area3d_rocks3d,"Areas can override the world's physics properties and work as attractors.
Similarly, they can also force sound to flow through a specific audio mixer channel."
area3d_hurtbox3d,"Often, two areas are used. Notice how the enemy's hurtbox (red) which can hurt you, is small, while the hitbox (green, big) is larger to allow you to hit them easily.
Use Ctrl to attack."
area3d_chestscene3d,"Areas can be used for chests, levers, and other context-sensitive actions (use E to open the chest)"
ninepatchrect_stylizeddialogbox,"NinePatchRect provide a stylized background for panels and other UI elements, by stretching and tiling a single Texture."
ninepatchrect_stylizedbutton,"Buttons have 5 styles to determine their appearance when interacted-with. StyleBoxTexture lets you use NinePatchRect textures for any of these styles."
ninepatchrect_stylizedcards,"You can put a StyleBoxTexture on any node with a style property, like PanelContainers."
ninepatchrect_stylizedwindows,"Using other Control nodes, you can assign StyleBoxTextures to create more customizable versions of existing nodes, replacing WindowDialog for your own approach."
path2d_pathfindingwithpath2d,"Path2D and PathFollow2D can be used to construct paths for the AStar algorithm. The smoothness can be controlled by Path2D Curve Bake Interval when PathFollow2D Cubic Interp is on."
path2d_boardofcards,"We can use it to create interesting randomized paths for a variety of games. Here we show a card-game setup."
path2d_path2dasforcefield,"Thinking outside the box, we can use these nodes for generating forces along paths that decay with distance from the path."
path2d_platformonpath2d,"Path2D and PathFollow2D can be used to create complex platform movements without manually animating the positions with AnimationPlayer."
path2d_firelaserontarget,"We can create spawning points for projectiles and lasers in combination with Line2D."
button_animatedbutton,"Buttons are... well, buttons. They tell you when the player presses or toggles them allowing you to play animations, open menus, and more."
button_turnbasedcombatbuttons,"You can use them for about any menu, including in a turn-based combat system."
button_shop,"You can also use buttons to buy items from a shop."
button_buildmode,"The build button at the bottom of the screen uses the Button's toggle mode. When it's on, you can place units on the map."
button_hotkey,"You can assign a ShortCut to a button, allowing the player to press a key to activate it."
button_weaponselect,"If you assign the same ButtonGroup resource to multiple buttons, only one of them can be active at a time, turning them into radio buttons."
optionbutton_difficultysettings,"Option buttons are very common for menus and options for offering simple exclusive options to the player. For example the difficulty options below."
optionbutton_matchcustomization,"You may need to offer many configurable options to the player, for this Option Buttons are ideal as you can present many options with code."
optionbutton_skillslots,"Option buttons have texturing options which can let you create elegant menus showing perk and level up choices."
optionbutton_weaponselect,"You can use metadata to associate a variable with an option item. Here we save a different guns in the menu option itself."
lineedit_charactername,"A LineEdit is great at handling all the complex edge cases of recieving text the player enters. Making it ideal for letting the player enter their name."
lineedit_searchbar,"You can also use a line edit as a way of filtering content  by checking the similarity of the typed word and the contents of the container."
lineedit_emailpassword,"A LineEdit is essential for common interface tasks like letting a player enter credentials to log into an account. It even has options to hide sensitive fields like passwords."
navigation2d_mazechase,"Navigation2D is a fantastic tool to give you simple AI behaviour like pursuit with little work."
navigation2d_gridnavigation,"With the use of the stepify function you can easily wrap your paths to map onto grids."
navigation2d_navigationoptions,"By enabling and disabling Navigation Polygons or swapping between Navigation2D nodes, you can generate contextual paths when routes are blocked."
navigation2d_hazards,"With some work you can update your NavigationPolygonInstances in real time to changes their shape and avoid hazards."
navigation_mazechase3d,"Navigation is a fantastic tool to give you simple AI behaviour like pursuit with little work. Note how the agent height used for the navigation mesh, blocks the agent from going under the overhang."
navigation_navigationoptions3d,"By enabling and disabling Navigation Mesh Instances or swapping between Navigation nodes, you can generate contextual paths when routes are blocked."
navigation_gridnavigation3d,"With the use of the Vector3 snap function you can easily wrap your paths to map onto grids."
raycast_lineofsight3d,"Ray casts are great for lines of sight. They collide with the first obstacle they encounter, allowing you to detect if there's something between the AI and the player."
raycast_lineofsight3dmanyrays,"By casting multiple rays, you can improve your AI's vision. The simplest way is to fan them out and layer them, as in this example."
raycast_edgedetection3d,"You can detect when the character's about to fall off a ledge with rays pointing down placed at their feet."
raycast_boids3d,"Using rays pointing forward, in a cone, you can get AIs to steer away from obstacles."
raycast_grabledge3d,"Ray casts are great to detect ledges. To do so, you need at least one ray placed around where you want the character to grab ledges."
raycast_lasersight3d,"FPS games almost always use ray casts for weapons, be it for bullets, but also continuous beams like this laser."
raycast_hitscan3d,"This gattling gun uses a ray cast for each bullet. We place the impact effect where the ray hits the wall."
particles2d_dustpuff,"Particles2D are great for VFX to juice up your games. Here, we provide dust puffs for a visual feedback whenever the character lands on the floor."
particles2d_watersplash,"Godot's particle system has some interesting physics simulation features. Using properties like gravity and linear velocity we can spread particles like water splashing."
particles2d_bloodspills,"With the same idea as a water splash, we can move the particles' emission point to a collision point to spill a ~liquid~ when something hurts our character."
particles2d_environmentparticles,"We can use different emission shapes for our particles. Here we used a box with width equal to the game screen's. This is how we can simulate rain and snow for instance."
particles2d_chargingvisualeffect,"Together with an AnimationPlayer particles become a super powerful VFX tool. In this charging effect, we animated the speed scale property. Hold down Shoot to charge and cast a laser attack."
particles2d_rocketthrust,"Most ParticlesMaterial's properties have a way to control them along their lifespan. For instance, to simulate thrust's fire we can create a gradient with fire like colors."
particles2d_explosion,"To create more complex effects we can stack particles together. Left click on the screen to create some explosions. They are multi-layered particles synced using animations."
particles2d_suckingeffect,"Tweaking the ParticlesMaterial's properties we can reach awesome looking effects. For this black hole we explored negative radial acceleration, orbit velocity, and a sphere emission shape."
particles2d_trail,"The Particles2D node is the main part of Godot's 2D particles system. For a trail effect, we worked on the node's lifetime and amount properties which dictate the resolution of our trail."
particles2d_emissionmask,"We can play with emission masks to emit particles based on a texture. In this aura effect, we used the spaceship's texture as emission mask."
tilemap_autotileplatformer,"The TileMap node supports autotiles, which automatically update the terrain as you paint your level."
tilemap_isometricdungeon,"By using the node's isometric mode, you can create isometric 2D worlds."
tilemap_lavafloortiles,"In this screen, the lava uses a dedicated TileMap node. That way, we can animate it using a shader and kill the player on collision."
tilemap_tileunits,"Using a TileMap, you can convert coordinates between pixels and grid cells. That's really useful for grid-based games."
tilemap_tileslightocclusion,"Inside your TileMap's TileSet, you can draw light occlusion polygons, which will cast shadows."
tilemap_floorsoundstilemap,"Using a TileMap, it's easy to query what type of tile the player is on and play footstep sounds based on the type."
panelcontainer_fittodialog,"A PanelContainer expands to fit its children, allowing you to create bubbles that scale to fit the text automatically."
panelcontainer_cardborder,"The cards use a PanelContainer with a StyleBox that draws the outline and shadow. You can click and drag the cards."
panelcontainer_dragdropinventory,"Godot's UI system has built-in virtual methods to drag and drop elements, which we use here."
panelcontainer_keepcontrolchildren,"This example shows the difference between PanelContainer and Panel: the former resizes to fit the content."
area2d_tacticalunitselection,"You can use areas to draw box selection and detect every area or body that overlaps or ends up inside the box."
remotetransform_remotecamera,"A RemoteTransform is ideal for sharing the position of a node without its scale or rotation, here we share the players position with a camera but not their rotation, for free aiming."
remotetransform_grindrail,"A RemoteTransform pairs excellently with a Path and PathfFollow node to make a character stick to a specific path such as a grind rail like this one, jump on to try it out!"
remotetransform_skateboarding3d,"We have used a RemoteTransform to handle Ragdolls that need to attach and detach them from bodies like a skateboard. Try crashing at a high speed to knock the ragdoll off the board."
remotetransform_airstrike3d,"You can use a remoteTransform to easily position animation heavy attacks like this airstrike on enemies."
remotetransform_3dcarddragging,"RemoteTransform nodes are a great tool for handling dragging and dropping objects, here we have a remote transform locked to the mouse position to let us move cards in 3D space with the mouse."
light_muzzleflash,"OmniLight, SpotLight, and DirectionalLight light the world in realtime. They can cast shadows and interact with each other."
light_outdoorhdri,"DirectionalLight casts light across the entire scene, like the sun. You can match its angle with the sun in a PanoramaSky to create believable outdoor lighting."
light_daynightcycle,"You can also animate a DirectionalLight's rotation, energy, and color to create a day-night cycle. You can also adjust a WorldEnvironment's ambient color to fit the scene."
light_flashlight,"Spotlights are handy for creating flashlights and other limited light sources."
light_shootlights,"You can animate any dynamic light to respond to in-game events. Shoot the lights to break them."
light_interiorlighting,"Using GIProbe, you can get believable indrect light that updates with your scene. Notice how the cube colors bounce onto the white walls."
light_torchlight,"Using BakedLightmap, you can render static, high quality lighting onto models for ray-traced lighting. In this example, we only baked indirect light so the light and shadows stay dynamic."
visibilitynotifier2d_disappearingprojectiles,"We can use VisibilityNotifier2D to automatically destroy objects that go off-screen, like these bullets."
visibilitynotifier2d_screenwideeffect,"Going beyond the optimization and performance aspects, we can use VisibilityNotifier2D for screen-wide effects. Such as a skill that kills all visible enemies."
visibilitynotifier2d_visibilitybaseddialogue,"Sometimes we need to warn players about a hazard as it gets in the view. Here, we display a message above a spike pit to warn the player."
visibilitynotifier2d_visiblemovingplatforms,"The VisibilityEnabler2D can enable and disable processes and animations based on its parent's visibility. Here the platform stops moving when off-screen."
visibilitynotifier2d_visiblewandering,"We can use this ability as well for optimization or gameplay, like deactivating AI when they leave the view."
visibilitynotifier2d_visibilitybasedbehaviorpattern,"The VisibilityEnabler2D node extends VisibilityNotifier2D and automatically toggles animation players, physics processing, and particles for you. Here, we use it to stop the turrets."
path_pathfindingwithpath,"Path and PathFollow can be used to construct paths for the AStar algorithm. The smoothness can be controlled by Path Curve Bake Interval when PathFollow Cubic Interp is on."
path_boardofcards,"We can use it to create interesting randomized paths for a variety of games. Here we show a card-game setup."
path_platformonpath,"Path and PathFollow can be used to create complex platform movements without manually animating the positions with AnimationPlayer."
path_firelaserontarget3d,"We can create spawning points for projectiles and lasers in combination with CSGPolygon."
path_pathasforcefield,"Thinking outside the box, we can use these nodes for generating forces along paths that decay with distance from the path."
path_railgrind,"Path and PathFollow are perfect for rail-grinding games where we need to avoid obstacles."
gridmap_gridbasedbuilder,"Grid maps are like tilemaps, but in 3D. you can use them to build grid-based 3D levels and gameplay, like to place buildings."
gridmap_probabilisticcells3d,"In this demo, we randomize a specific group of cells which can become trees or receive small decorations like mushrooms and grass."
gridmap_racetrackeditor,"The GridMap node doesn't come with built-in auto-tiling, but you can code tiling rules yourself. It involves updating the neighbors of drawn cells."
gridmap_floorsoundsgridmap,"Using a GridMap, it's easy to query what type of tile the player is on and play footstep sounds based on the type."
visibilitynotifier_visibilitybehavior,"You can change how enemies behave when they're off-screen. Systems like enemy direction indicators also give players awareness to surrounding dangers."
visibilitynotifier_observerai,"We can use VisibilityNotifiers to react when the player looks at something. Try looking at an NPC long enough, they will turn to look at you."
visibilitynotifier_multiplecameras,"You can use VisibilityNotifiers to control enemy behavior for fairer gameplay. Here we've visualized the camera frustum to show when the enemies respond."
csgbox_csgpolygonpath,"CSGPolygon is useful in combination with Path for making curvy... paths. It has built-in collision support good for fast prototyping."
csgbox_csglevelprototype,"The CSG nodes are useful for prototyping levels. Remember to keep your CSG trees shallow for performance reasons. CSGMesh is especially interesting for working with custom meshes."
camera_fpscamera,"You can attach cameras to objects like the player, to create a first-person camera. Mouse movement or the joystick can be configured to control the camera's rotation."
camera_3rdpersoncamera,"Using ClippedCamera and a SpringArm, you can prevent objects from getting in the way of your player and a third person camera."
camera_camerashake3d,"You can modulate the H Offset and V Offset properties to create screen shake when the player gets hit."
camera_fieldofview,"Every camera has a field of view, which you can modulate based on the player's speed. A higher field of view makes the player appear to move faster."
camera_camerainterpolate3d,"You can interpolate the camera's position between multiple focal points. Watch what happens to the camera when you get close to the far corner of the map."
meshinstance_meshinstanceoverview,"The MeshInstance node lets you place a 3D mesh in the world. You can assign it a primitive shape like cubes or 3D models exported from an external program like Blender."
meshinstance_scatteringtrees,"MultiMeshInstance lets you repeat a specific mesh, like this tree, efficiently. The node handles the placement, size and orientation of each instance and offers better render performance than MeshInstance nodes."
meshinstance_schooloffish,"You can move and recolor each instance of a MultiMeshInstance every frame to create swarms, like those fishes."
meshinstance_heightmapshader,"You can give a MeshInstance with a primitive shape a shader to move its geometry. Here, we use a heightmap shader with a noise texture to add details to the ground."
