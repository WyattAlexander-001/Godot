[gd_scene load_steps=20 format=2]

[ext_resource path="res://common/PlayerFPS3D/LaserBeam3D.gd" type="Script" id=1]
[ext_resource path="res://common/VFX/CollisionParticles/CollisionParticles.tscn" type="PackedScene" id=2]

[sub_resource type="CylinderMesh" id=1]
top_radius = 0.02
bottom_radius = 0.02
height = 1.0

[sub_resource type="SpatialMaterial" id=2]
flags_transparent = true
flags_unshaded = true
params_blend_mode = 1
albedo_color = Color( 2.68, 3.24, 4, 0.8 )

[sub_resource type="Gradient" id=3]
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=4]
gradient = SubResource( 3 )

[sub_resource type="Curve" id=5]
_data = [ Vector2( 0, 1 ), 0.0, -0.129864, 0, 0, Vector2( 1, 0.626126 ), -0.934871, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=6]
curve = SubResource( 5 )

[sub_resource type="ParticlesMaterial" id=7]
emission_shape = 2
emission_box_extents = Vector3( 0.025, 0.025, 0.5 )
direction = Vector3( 0, 0, 0 )
spread = 22.5
gravity = Vector3( 0, 0.2, 0 )
tangential_accel = 0.2
tangential_accel_random = 1.0
scale = 0.03
scale_random = 0.01
scale_curve = SubResource( 6 )
color_ramp = SubResource( 4 )

[sub_resource type="Shader" id=18]
code = "// NOTE: Shader automatically converted from Godot Engine 3.4.stable's SpatialMaterial.

shader_type spatial;
render_mode blend_add,unshaded;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform int particles_anim_h_frames;
uniform int particles_anim_v_frames;
uniform bool particles_anim_loop;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	mat4 mat_world = mat4(normalize(CAMERA_MATRIX[0])*length(WORLD_MATRIX[0]),normalize(CAMERA_MATRIX[1])*length(WORLD_MATRIX[0]),normalize(CAMERA_MATRIX[2])*length(WORLD_MATRIX[2]),WORLD_MATRIX[3]);
	mat_world = mat_world * mat4( vec4(cos(INSTANCE_CUSTOM.x),-sin(INSTANCE_CUSTOM.x), 0.0, 0.0), vec4(sin(INSTANCE_CUSTOM.x), cos(INSTANCE_CUSTOM.x), 0.0, 0.0),vec4(0.0, 0.0, 1.0, 0.0),vec4(0.0, 0.0, 0.0, 1.0));
	MODELVIEW_MATRIX = INV_CAMERA_MATRIX * mat_world;
	float h_frames = float(particles_anim_h_frames);
	float v_frames = float(particles_anim_v_frames);
	float particle_total_frames = float(particles_anim_h_frames * particles_anim_v_frames);
	float particle_frame = floor(INSTANCE_CUSTOM.z * float(particle_total_frames));
	if (!particles_anim_loop) {
		particle_frame = clamp(particle_frame, 0.0, particle_total_frames - 1.0);
	} else {
		particle_frame = mod(particle_frame, particle_total_frames);
	}	UV /= vec2(h_frames, v_frames);
	UV += vec2(mod(particle_frame, h_frames) / h_frames, floor((particle_frame + 0.5) / h_frames) / v_frames);
}

void fragment() {
	float gradient = smoothstep(0.0, 1.0, clamp(length(UV - vec2(0.5)) * 2.0, 0.0, 1.0));
	ALBEDO = mix(vec3(1.0), vec3(0.0, 0.3, 1.0), gradient) * 3.0;
	ALPHA = 1.0 - gradient;
}
"

[sub_resource type="ShaderMaterial" id=19]
shader = SubResource( 18 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/particles_anim_h_frames = 1
shader_param/particles_anim_v_frames = 1
shader_param/particles_anim_loop = false
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )

[sub_resource type="QuadMesh" id=9]
material = SubResource( 19 )

[sub_resource type="Gradient" id=10]
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=11]
gradient = SubResource( 10 )

[sub_resource type="Curve" id=12]
_data = [ Vector2( 0, 1 ), 0.0, -0.129864, 0, 0, Vector2( 1, 0.626126 ), -0.934871, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=13]
curve = SubResource( 12 )

[sub_resource type="ParticlesMaterial" id=14]
trail_divisor = 16
direction = Vector3( 0, 0, -1 )
spread = 22.0
gravity = Vector3( 0, -5, 0 )
initial_velocity = 3.0
initial_velocity_random = 0.3
scale = 0.1
scale_random = 0.05
scale_curve = SubResource( 13 )
color_ramp = SubResource( 11 )

[sub_resource type="QuadMesh" id=16]
material = SubResource( 19 )

[sub_resource type="Animation" id=17]
length = 0.2
loop = true
tracks/0/type = "bezier"
tracks/0/path = NodePath("Model:scale:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 1, 0, 0, 0.051, -0.001, 0.6, -0.063, 0, 0.06, 0, 1, -0.059, 0, 0.058, 0 ),
"times": PoolRealArray( 0, 0.1, 0.2 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("Model:scale:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 1, -0.064, 0, 0.037, 0, 0.6, -0.05, 0, 0.057, 0, 1, -0.054, 0, 0.05, 0 ),
"times": PoolRealArray( 0, 0.1, 0.2 )
}

[node name="LaserBeam3D" type="Spatial"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -0.149799 )
script = ExtResource( 1 )
camera_ray_path = NodePath("../../Camera/RayCast")

[node name="Model" type="Spatial" parent="."]

[node name="BeamMesh" type="MeshInstance" parent="Model"]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, -0.5 )
visible = false
mesh = SubResource( 1 )
material/0 = SubResource( 2 )

[node name="BeamParticles" type="Particles" parent="Model"]
transform = Transform( 1.55994, 0, 0, 0, 1.55392, 0, 0, 0, 1, 0, 0, -0.5 )
emitting = false
amount = 80
local_coords = false
process_material = SubResource( 7 )
draw_pass_1 = SubResource( 9 )

[node name="CollisionParticles" parent="." instance=ExtResource( 2 )]
process_material = SubResource( 14 )
draw_pass_1 = SubResource( 16 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "BeamVibrate"
anims/BeamVibrate = SubResource( 17 )
