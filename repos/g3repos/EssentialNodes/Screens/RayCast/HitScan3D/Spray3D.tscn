[gd_scene load_steps=9 format=2]

[ext_resource path="res://Screens/RayCast/HitScan3D/Spray3D.gd" type="Script" id=1]
[ext_resource path="res://Screens/RayCast/HitScan3D/shot.png" type="Texture" id=2]
[ext_resource path="res://common/PlayerFPS3D/flame_model.obj" type="ArrayMesh" id=3]
[ext_resource path="res://Screens/RayCast/HitScan3D/Impact.tres" type="Material" id=4]

[sub_resource type="QuadMesh" id=1]
size = Vector2( 0.025, 1 )

[sub_resource type="Shader" id=2]
code = "shader_type spatial;
uniform sampler2D shot_texture;
uniform float alpha = 1.0;

vec3 project_on_plane(vec3 vec, vec3 normal) {
    return vec - normal * dot(vec, normal);
}

vec3 rotate (vec3 v, vec3 n, float a) {
    return v * cos(a) + cross(n, v) * sin(a) + n * dot(n, v) * (1. - cos(a));
}

void vertex() {
    vec3 obj_pos = (WORLD_MATRIX * vec4(0, 0, 0, 1)).xyz;
    vec3 world_camera = (CAMERA_MATRIX * vec4(0.0, 0.0, 0.0, 1.0)).xyz;
    vec3 c = world_camera - obj_pos;
    c = normalize(c);
    c = (vec4(c, 0.0) * WORLD_MATRIX).xyz;
    vec3 axis = vec3(0, 1, 0);
    vec3 target = project_on_plane(c, axis);
    target = normalize(target);
    float dot_product = dot(target, NORMAL);
    float angle = acos( dot_product);
    if (target.x < 0.0) {
        angle = -angle;
    }
    VERTEX = rotate(VERTEX, axis, angle);
    NORMAL = rotate(NORMAL, axis, angle);
}

void fragment() {
    vec4 beam = texture(shot_texture, UV);
    EMISSION = beam.rgb;
    ALPHA = beam.a * alpha;
}"

[sub_resource type="ShaderMaterial" id=3]
resource_local_to_scene = true
shader = SubResource( 2 )
shader_param/alpha = 0.0
shader_param/shot_texture = ExtResource( 2 )

[sub_resource type="Animation" id=4]
resource_name = "shoot"
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath("ShotPivot/Shot:material/0:shader_param/alpha")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("RicochetPivot:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 1, 1, 1 ), Vector3( 0.4, 0.4, 0.4 ) ]
}
tracks/2/type = "method"
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.4 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "queue_free"
} ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("RicochetPivot/flame_model:material/0:albedo_color")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 4, 4, 4, 1 ), Color( 1, 1, 1, 0 ) ]
}

[node name="Spray3D" type="Spatial"]
script = ExtResource( 1 )

[node name="ShotPivot" type="Spatial" parent="."]

[node name="Shot" type="MeshInstance" parent="ShotPivot"]
transform = Transform( 1.91069e-15, 4.37114e-08, 1, 1, -4.37114e-08, 0, 4.37114e-08, 1, -4.37114e-08, 0, 0, -0.5 )
mesh = SubResource( 1 )
material/0 = SubResource( 3 )

[node name="RicochetPivot" type="Spatial" parent="."]
transform = Transform( 0.4, 0, 0, 0, 0.4, 0, 0, 0, 0.4, 0.2, 0, 0 )

[node name="flame_model" type="MeshInstance" parent="RicochetPivot"]
transform = Transform( 0.158382, 0, 0, 0, -6.92311e-09, 0.158382, 0, -0.290057, -1.26788e-08, 0, 0, 0 )
mesh = ExtResource( 3 )
material/0 = ExtResource( 4 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/shoot = SubResource( 4 )
