[gd_scene load_steps=14 format=2]

[ext_resource path="res://common/Environment/space_environment_meshlib.tres" type="MeshLibrary" id=1]
[ext_resource path="res://common/Basic3D/CraftRacer.tscn" type="PackedScene" id=2]
[ext_resource path="res://Screens/Path/PathfindingWithPath/PathfindingWithPath.gd" type="Script" id=3]
[ext_resource path="res://Screens/Path/PathfindingWithPath/GridMap.gd" type="Script" id=4]
[ext_resource path="res://common/UI/ui_theme.tres" type="Theme" id=5]
[ext_resource path="res://common/UI/Slider.tscn" type="PackedScene" id=6]
[ext_resource path="res://addons/node-essential-helpers/debug_drawing/HaloMesh.tscn" type="PackedScene" id=7]
[ext_resource path="res://common/Environment/dirt_alt.tres" type="Material" id=8]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode depth_draw_opaque, cull_disabled, ambient_light_disabled, blend_mix, shadows_disabled;

uniform vec4 halo_color : hint_color;
uniform float fresnel_power = 1.0;
uniform float edge_intensity = 0.5;

void fragment() {
	//Create a fresnel effect from the NORMAL and VIEW vectors.
	float fresnel = pow(1.0 - dot(NORMAL, VIEW), fresnel_power) * edge_intensity;
	
	//Get the raw linear depth from the depth texture into a  [-1, 1] range
	float depth = texture(DEPTH_TEXTURE, SCREEN_UV).r * 2.0 - 1.0;
	//Recreate linear depth of the intersecting geometry using projection matrix, and subtract the vertex of the sphere
	depth = PROJECTION_MATRIX[3][2] / (depth + PROJECTION_MATRIX[2][2]) + VERTEX.z;
	//Intensity intersection effect
	depth = pow(1.0 - clamp(depth, 0, 1), fresnel_power) * edge_intensity;
	
	//Calculate final alpha using fresnel and depth joined together
	fresnel = fresnel + depth;

	//Apply final color
	ALBEDO = vec3(0);
	EMISSION = halo_color.rgb;
	ALPHA = smoothstep(0.0, 1.0, fresnel);
}"

[sub_resource type="ShaderMaterial" id=2]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/halo_color = Color( 0.921569, 0.337255, 0.294118, 1 )
shader_param/fresnel_power = 0.5
shader_param/edge_intensity = 0.5

[sub_resource type="CubeMesh" id=3]

[sub_resource type="PlaneMesh" id=4]
size = Vector2( 33, 17 )

[sub_resource type="Curve3D" id=5]
bake_interval = 3.0
_data = {
"points": PoolVector3Array(  ),
"tilts": PoolRealArray(  )
}

[node name="PathfindingWithPath" type="Spatial"]
script = ExtResource( 3 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 0.422618, 0.906307, 0, -0.906307, 0.422618, 17, 20, 17 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 0.707107, 0.5, 0.5, 0, -0.707107, 0.707107, 0.707107, -0.5, -0.5, 0, 0, 0 )
shadow_enabled = true
shadow_bias = 0.05
directional_shadow_blend_splits = true
directional_shadow_normal_bias = 0.2
directional_shadow_max_distance = 50.0

[node name="HaloMesh" parent="." instance=ExtResource( 7 )]
material_override = SubResource( 2 )
mesh = SubResource( 3 )
halo_color = Color( 0.921569, 0.337255, 0.294118, 1 )

[node name="Ground" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 17, 0, 9 )
mesh = SubResource( 4 )
material/0 = ExtResource( 8 )

[node name="GridMap" type="GridMap" parent="."]
mesh_library = ExtResource( 1 )
cell_center_y = false
data = {
"cells": PoolIntArray( 0, 0, 9, 1, 0, 9, 2, 0, 9, 3, 0, 9, 4, 0, 9, 5, 0, 9, 6, 0, 9, 7, 0, 9, 8, 0, 9, 9, 0, 9, 10, 0, 9, 11, 0, 9, 12, 0, 9, 13, 0, 9, 14, 0, 9, 15, 0, 1441804, 16, 0, 1441804, 65536, 0, 9, 65537, 0, 1441807, 65538, 0, 9, 65539, 0, 9, 65540, 0, 9, 65541, 0, 9, 65542, 0, 9, 65543, 0, 9, 65544, 0, 9, 65545, 0, 9, 65546, 0, 9, 65547, 0, 9, 65548, 0, 9, 65549, 0, 9, 65550, 0, 19, 65551, 0, 655372, 65552, 0, 655372, 0, 1, 9, 1, 1, 9, 2, 1, 9, 3, 1, 1441836, 12, 1, 23, 13, 1, 655370, 14, 1, 9, 15, 1, 1441804, 16, 1, 1441804, 65536, 1, 1441801, 65537, 1, 1441808, 65538, 1, 14, 65548, 1, 26, 65549, 1, 5, 65550, 1, 1441812, 65551, 1, 1441798, 65552, 1, 1441798, 0, 2, 9, 1, 2, 1441802, 2, 2, 1441808, 3, 2, 655381, 8, 2, 1441796, 13, 2, 655370, 14, 2, 9, 15, 2, 9, 16, 2, 1441804, 65536, 2, 9, 65539, 2, 655389, 65551, 2, 1441809, 65552, 2, 655372, 0, 3, 9, 11, 3, 3, 13, 3, 1441800, 14, 3, 1441802, 15, 3, 1441801, 16, 3, 1441804, 65536, 3, 9, 65551, 3, 655363, 65552, 3, 1441798, 0, 4, 9, 15, 4, 655369, 16, 4, 1441804, 65536, 4, 1441807, 65551, 4, 655370, 65552, 4, 18, 0, 5, 9, 11, 5, 25, 16, 5, 1441804, 65536, 5, 9, 65552, 5, 655366, 0, 6, 9, 12, 6, 3, 14, 6, 655377, 15, 6, 1441804, 16, 6, 1441804, 65536, 6, 9, 65551, 6, 655372, 65552, 6, 1441798, 0, 7, 9, 10, 7, 1048620, 11, 7, 9, 12, 7, 9, 13, 7, 1441801, 14, 7, 12, 15, 7, 1441801, 16, 7, 9, 65536, 7, 9, 65547, 7, 1441801, 65548, 7, 1441801, 65549, 7, 655369, 65550, 7, 1048594, 65551, 7, 1048594, 65552, 7, 1048595, 0, 8, 9, 1, 8, 9, 2, 8, 9, 3, 8, 9, 4, 8, 9, 5, 8, 9, 6, 8, 9, 7, 8, 9, 8, 8, 9, 9, 8, 9, 10, 8, 9, 11, 8, 9, 12, 8, 9, 13, 8, 9, 14, 8, 9, 15, 8, 9, 16, 8, 9, 65536, 8, 1441807, 65537, 8, 9, 65538, 8, 9, 65539, 8, 9, 65540, 8, 9, 65541, 8, 9, 65542, 8, 1441807, 65543, 8, 9, 65544, 8, 1441807, 65545, 8, 9, 65546, 8, 9, 65547, 8, 1441807, 65548, 8, 9, 65549, 8, 9, 65550, 8, 9, 65551, 8, 9, 65552, 8, 9 )
}
script = ExtResource( 4 )
__meta__ = {
"_editor_clip_": 0,
"_editor_floor_": Vector3( 0, 0, 0 )
}

[node name="GridMapDecorations" type="GridMap" parent="."]
mesh_library = ExtResource( 1 )
cell_center_y = false
data = {
"cells": PoolIntArray( 9, 2, 0, 9, 3, 1048577, 11, 3, 1048615, 11, 4, 1048614, 12, 4, 655360, 13, 4, 1048578, 14, 4, 655361, 11, 5, 39, 12, 5, 1048578, 13, 5, 655362, 14, 5, 1048578, 15, 5, 655362, 10, 6, 1048614, 11, 6, 655361, 13, 6, 1441792 )
}
__meta__ = {
"_editor_clip_": 0,
"_editor_floor_": Vector3( 0, 0, 0 )
}

[node name="Path" type="Path" parent="." groups=["Draw"]]
curve = SubResource( 5 )

[node name="PathFollow" type="PathFollow" parent="Path"]
transform = Transform( -4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, 3, 1, 9 )
rotation_mode = 4
loop = false

[node name="CraftRacer" parent="Path/PathFollow" instance=ExtResource( 2 )]
transform = Transform( -0.6, 0, -9.05975e-08, 0, 0.6, 0, 9.05975e-08, 0, -0.6, 0, 0, 0 )

[node name="LabelLevel" type="Label" parent="."]
anchor_left = 1.0
anchor_right = 1.0
margin_top = 160.0
margin_bottom = 205.0
grow_horizontal = 0
theme = ExtResource( 5 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HBoxContainer" type="HBoxContainer" parent="."]
anchor_left = 0.5
anchor_right = 0.5
margin_left = -494.0
margin_top = 186.0
margin_right = 479.0
margin_bottom = 282.0
theme = ExtResource( 5 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Panel" type="PanelContainer" parent="HBoxContainer"]
margin_right = 413.0
margin_bottom = 96.0

[node name="Label" type="Label" parent="HBoxContainer/Panel"]
margin_left = 14.0
margin_top = 25.0
margin_right = 399.0
margin_bottom = 70.0
text = "Curve Bake Interval:"

[node name="Slider" parent="HBoxContainer" instance=ExtResource( 6 )]
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 445.0
margin_top = 0.0
margin_right = 957.0
margin_bottom = 96.0
max_value = 8.0
